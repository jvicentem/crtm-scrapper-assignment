from rdflib import URIRef, Literal, Graph, BNode
import csv

'''
Parses a csv in gtfs format with crtm public transport info and generates a rdf graph stored in a xml file.
This method takes two arguments: the csv file path and the output xml path.
'''


csvFile = open("info_trans.csv","r", encoding='latin-1')
csvReader = csv.reader(csvFile)

g = Graph()

transportmean_name = URIRef('http://dbpedia.org/ontology/type')
line_number = URIRef('http://www.daml.org/ontologies/396#line')
order_number = URIRef('http://dbpedia.org/ontology/order')
stop_id = URIRef('http://dbpedia.org/ontology/id')
stop_code = URIRef('http://dbpedia.org/ontology/code')
stop_name = URIRef('http://dbpedia.org/ontology/name')
stop_desc = URIRef('http://dbpedia.org/ontology/address')
stop_lat = URIRef('http://www.w3.org/2003/01/geo/wgs84_pos#lat')
stop_lon = URIRef('http://www.w3.org/2003/01/geo/wgs84_pos#lon')
zone_id = URIRef('http://dbpedia.org/ontology/location')
stop_url = URIRef('http://www.daml.org/ontologies/396#homepage')
location_type = URIRef('http://www.ontologydesignpatterns.org/ont/op/openpolis.owl#location_type')
parent_station = URIRef('http://dbpedia.org/ontology/parent')
stop_timezone = URIRef('http://dbpedia.org/ontology/timezone')
wheelchair_boarding = URIRef('http://dbpedia.org/ontology/isHandicappedAccessible')

for row in csvReader:
    g.add((BNode(row[3]), transportmean_name, Literal(row[0])))
    g.add((BNode(row[3]), line_number, Literal(row[1])))
    g.add((BNode(row[3]), order_number, Literal(row[2])))
    g.add((BNode(row[3]), stop_code, Literal(row[4])))
    g.add((BNode(row[3]), stop_name, Literal(row[5])))
    g.add((BNode(row[3]), stop_desc, Literal(row[6])))
    g.add((BNode(row[3]), stop_lat, Literal(row[7])))
    g.add((BNode(row[3]), stop_lon, Literal(row[8])))
    g.add((BNode(row[3]), zone_id, Literal(row[9])))
    g.add((BNode(row[3]), stop_url, Literal(row[10])))
    g.add((BNode(row[3]), location_type, Literal(row[11])))
    g.add((BNode(row[3]), parent_station, Literal(row[12])))
    g.add((BNode(row[3]), stop_timezone, Literal(row[13])))
    g.add((BNode(row[3]), wheelchair_boarding, Literal(row[14])))

g.serialize(destination="crtm.xml", format='xml')
